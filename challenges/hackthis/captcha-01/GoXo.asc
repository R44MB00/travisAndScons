=== Hackthis Captcha 01

== Implementación del código en python

1.importamos las librerías necesarias:

[source, python]
----
from PIL import Image
from resizeimage import resizeimage
from PIL import ImageEnhance
import requests
from StringIO import StringIO
from pytesser import *
----

2.Iniciamos una nueva sesión, con la página del reto:

[source, python]
----
url = 'https://www.hackthis.co.uk/levels/captcha/1'
cap_url = 'https://www.hackthis.co.uk/levels/extras/captcha1.php'
data = {'username': 'Goso', 'password': 'XXXX'}

print ('logging in....')
s = requests.Session()
s.post('https://www.hackthis.co.uk/?login', data=data)
print ('logged!')
----

3.Función llamada *intento*, que se invoca para intentar resolver un nuevo
captcha, tomamos la imagen y le aumentamos el tamaño por 4 (mayor resolución)

[source, python]
----
def intento():

  page_image = s.get(cap_url)
  im = Image.open(StringIO(page_image.content))
  nx, ny = im.size
  im2 = im.resize((int(nx*4), int(ny*4)), Image.BICUBIC)
----

4.Invocamos el contraste, brillo, color y el 'afilado' de la imagen y se los
aumentamos 1.5 veces excepto para la variable 'sharp' que se disminye a la mitad

[source, python]
----
  con = ImageEnhance.Contrast(im2)
  br = ImageEnhance.Brightness(im2)
  col = ImageEnhance.Color(im2)
  sharp = ImageEnhance.Sharpness(im2)

  im2 = con.enhance(1.5)
  im2 = br.enhance(1.5)
  im2 = col.enhance(1.5)
  im2 = sharp.enhance(0.5)
----

5.Guardamos la imagen con estas modificaciones

[source, python]
----
im2.save('cap.png')
----

6.Tomamos de nuevo la imagen para convertirla a blanco y negro con filtro
tipo threshold:

[source, python]
----
  im3 = Image.open('cap.png')
  im3 = im3.convert('RGBA')
  pix = im3.load()
  for y in xrange(im3.size[1]):
    for x in xrange(im3.size[0]):
      if pix[x, y] < (17, 17, 17, 255):
        pix[x, y] = (0, 0, 0, 255)
      else:
        pix[x, y] = (255, 255, 255, 255)
----

7.Guardamos la imagen a blanco y negro:

[source, python]
----
im3.save('cap.gif', 'GIF')
----

8.Tomamos esta imagen y le aplicamos la librería *pytesser* para pasar
la imagen a texto, imprimimos por consola este texto derecho y reverso
(como lo pide el reto):

[source, python]
----
  im4 = Image.open('cap.gif')
  text = image_to_string(im4).strip().replace(' ','')
  print 'normal: ', text
  text = text[::-1]
  print 'inversed: ', text
----

9.Enviamos via 'POST' en la variable 'answer 'el texto al reto

[source, python]
----
  payload = {'answer': text}
  s.post(url, data=payload)
  return s.get(url).text
----

10. Acá acaba la Función intento. Ahora creamos un ciclo 'while' infinito
que haga muchos intentos hasta dar con la solución y pasar el reto:

[source, python]
----
while (True):
  response = intento()
  if ('Incomplete' in response):
    print 'Trying'
    print '\n'
  else:
    break

print 'SUCCESS!!!!!!'
----
