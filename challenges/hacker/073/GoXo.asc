= Hacker 73 UpCount

== Resumen

*Hacker.org* es un sitio web de retos informáticos y de hacking. Los retos que proponen van desde criptografía, esteanografía y penetración hasta retos de reversing y de análisis de código. Este sitio puede ser asociado con la plataforma weChall con el fin de compartir los puntos ganados por reto resuelto.

== Requisitos

Estar registrado como usuario en http://www.hacker.org[www.Hacker.org]

== Solución

=== Escenario: pasar el nivel

*Dado* un código en java, nos preguntar por la salida de este código:

[source,java]
----
public class UpCount {
	private long calc(int depth) {
		if (depth == 0) return 1;
		long cc = calc(depth - 1);
		return cc + (depth % 7) + ((((cc ^ depth) % 4) == 0) ? 1 : 0); 
	}
	public static void main(String[] args) {
		UpCount uc = new UpCount();
		System.out.println(uc.calc(11589));
	}
}
	
----

*Y* cuando ejecutamos este programa nos sale un desbordamiento.

*NOTA:* este es un famoso problema de "_recursion_".

*Cuando* cambiamos el código, interpretándolo de otra manera con iteraciones:

[source,java]
----
public class UpCount {
	private long calc(int depth) {
		long cc = 1;
		for (int i = 0; i<= depth; i++){
			if (((cc ^ i) % 4) == 0) cc += 1;
			cc += i % 7;	
		}
		return cc;
	}

	public static void main(String[] args) {
		UpCount uc = new UpCount();
		System.out.println(uc.calc(11589));
	}
}
	
----

*Entonces* podré ver la salida del código sin problemas

*Y* podré pasar de nivel

== Link del reto
http://www.hacker.org/challenge/chal.php?id=73[Hacker 73]
