= ChallengeLand Captcha 3

== Resumen

*ChallengeLand* es una página de retos informáticos y de hacking, los retos
realistic consisten en obtener las credenciales de sitios web que están
basados en sitios reales con problemas de seguridad reales.

== Requisitos

Estar registrado como usuario en http://challengeland.co/[Challenge Land]

== Solución

=== Escenario: diseñar programa para leer la cookie y pasarla a texto

*Dado* una imagen en la web con letras

*Cuando* se diseña el siguiente programa para tomar la imagen, descargarla
y transformarla a texto, el programa esa diseñado en python!

NOTA: es parecido al reto de captcha anterior, sólo que este tiene una
tipografía muy dificil de pasarla a texto.

1.Se importan las librerías necesarias:

[source python]
----
from PIL import Image
from StringIO import StringIO
from pytesser import *
import requests
import urllib
----

2.Se carga la información necesaria para ejecutar una sesión http con la página
web:

[source python]
----
cap = 'Captcha'
sol = 'Solve'
url = 'http://challengeland.co/Challenges/Captcha/e1211e428f'
cookie = {'ci_session':'c225fd80a7d5223526b8ddda84d91c04b5502e3c'}
solution = 'GOSO'
----

3.Se abre una sesión http para abrir la imagen:

[source python]
----
s = requests.Session()
page_image = s.get(url+cap, cookies=cookie)
im = Image.open(StringIO(page_image.content))
----

4.Se guarda la imagen:

[source python]
----
im.save('cap.png')
----

5.Se abre esta imagen y se transforma a texto con la ayuda de la librería
pytesser (esta librería debe estar disponible en la carpeta de este código):

[source python]
----
image_file = 'cap.png'
text = image_file_to_string(image_file)
solution = text.strip()
----

5.Seguramente no se van a identificar las letras mostradas tan fácilmente,
pero se sabe que son palabras constantes dispuestas de forma aleatoria.
Entonces creamos una variable last, identificamos las mayúsculas, y con las
mayúsculas identificamos las palabras:

[source python]
----
last = ""
for c in solution:
    if c == 'B':
        last += "Balls"
    if c == 'T':
        last += "Troll"
    if c == 'H':
        last += "Hacker"
    if c == 'g':
        last += "Suck"
    if c == '[':
        last += "LOL!"
    if c == 'P':
        last += "Pro"
    if c == '#':
        last += "#"
----

6.Finalmente imprimimos por pantalla el texto-solución, luego hacemos
una petición post con el texto-solución al link de la solución del reto
(con los parametros indicados por el reto):

[source python]
----
print solution
print last
payload = {"solve": last}
posted = s.post(url+sol, data=payload)
print posted.content
----

Esta vez no es nada preciso el texto por lo que debemos ejecutar el código
muchas veces (alrededor de 20) y la solución del reto se motrará eventualmente
por consola.

También se puede automatizar la solución con un while que ejecute las veces
que sea necesaria el código hasta que la solución se muestre.

== Link del reto

http://challengeland.co/Challenges/Captcha/e1211e428f[Captcha 3]

