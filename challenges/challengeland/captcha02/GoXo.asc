= ChallengeLand Captcha 2

== Resumen

*ChallengeLand* es una página de retos informáticos y de hacking, los retos
realistic consisten en obtener las credenciales de sitios web que están
basados en sitios reales con problemas de seguridad reales.

== Requisitos

Estar registrado como usuario en http://challengeland.co/[Challenge Land]

== Solución

=== Escenario: diseñar programa para leer la cookie y pasarla a texto

*Dado* una imagen en la web con letras

*Cuando* se diseña el siguiente programa para tomar la imagen, descargarla
y transformarla a texto, el programa esa diseñado en python!

NOTA: es parecido al reto de captcha anterior, sólo que en este se debe rotar
la imagen hasta que las letras queden derechas:

1.Se importan las librerías necesarias:

[source python]
----
from PIL import Image
from StringIO import StringIO
from pytesser import *
import requests
import urllib
----

2.Se carga la información necesaria para ejecutar una sesión http con la página
web:

[source python]
----
cap = 'Captcha'
sol = 'Solve'
url = 'http://challengeland.co/Challenges/Captcha/60e9d06ada'
cookie = {'ci_session':'c225fd80a7d5223526b8ddda84d91c04b5502e3c'}
solution = 'GOSO'
----

3.Se abre una sesión http para abrir la imagen:

[source python]
----
s = requests.Session()
page_image = s.get(url+cap, cookies=cookie)
im = Image.open(StringIO(page_image.content))
----

4.Se rota la imagen y se guarda:

[source python]
----
dst_im = Image.new("RGBA", (200,200), "white" )
im = im.convert('RGBA')
rot = im.rotate( -70, expand=1 )
dst_im.paste( rot, (0, 00), rot )
dst_im.save('cap.png')
----

5.Se abre esta imagen y se transforma a texto con la ayuda de la librería
pytesser (esta librería debe estar disponible en la carpeta de este código):

[source python]
----
image_file = 'cap.png'
text = image_file_to_string(image_file)
solution = text.strip()
----

6.Finalmente imprimimos por pantalla el texto-solución, luego hacemos
una petición post con el texto-solución al link de la solución del reto
(con los parametros indicados por el reto):

[source python]
----
print solution
payload = {"solve": solution}
posted = s.post(url+sol, data=payload)
print posted.content
----

A veces no es tan preciso el texto por lo que debemos ejecutar el código
unas cuantas veces, la solución del reto se motrará eventualmente por consola.

También se puede automatizar la solución con un while que ejecute las veces
que sea necesaria el código hasta que la solución se muestre.

== Link del reto

http://challengeland.co/Challenges/Captcha/60e9d06ada[Captcha 2]

