= Banner grabbing 

Banner grabbing es una técnica que se usa para recolectar información de un sistema, esto se hace a través del análisis de los servicios que corren en los puertos de la maquina, pero esta no es la única forma, esto puede ser usado por el administrador con el fin de reconocer y clasificar los dispositivos, pero también puede ser usado por un atacante con el fin de encontrar servicios vulnerables para su ataque. 

En esta ocasión veremos como recolectar información de los sistemas usando herramientas como *_nmap_* y *_netcat*, realizaremos un par de ejercicios prácticos en plataformas como http://www.dareyourmind.net/[dareyourmind] y https://www.hackthis.co.uk/[hackthis.co]  y enseñaremos algunos controles para mitigar la amenaza. 


== Banner grabbing Challenges

Es mucha la información importante que pueden revelarnos los servicios que corren en los puertos o las aplicaciones que corremos en nuestro servidor, como por ejemplo si se tratara de encontrar una vulnerabilidad en el sistema lo que se haría seria ver que servicios y que versión corre la maquina, luego se pasa a verificar en la *National Vulnerability DataBase (NVD)* si esa aplicación es vulnerable. _ver figura 1_

image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_200.png[]

Es por esto que en esta ocasión hablaremos de Bannner Grabbing y realizaremos una serie de retos paso a paso con el fin de que el proceso quede claro.

.*Retos*

* out of the box 5 en http://www.dareyourmind.net/[dareyourmind]
* Basic level 7 en  https://www.hackthis.co.uk/[hackthis.co]

=== Análisis pasivo y activo

Nmap es una herramienta muy completa para el análisis de puertos y la red, además nos ayuda a identificar los servicios que corren en cada puerto, en este par de ejercicios usaremos nmap, pero antes de seguir tenemos que dejar claro dos cosas. 

La primera es el análisis pasivo y el análisis activo, en la primera no se altera el flujo normal de la información y se interactúa muy poco con la maquina, en el segundo se fuerza a la maquina que nos de información, por lo tanto existe una mayor posibilidad de ser detectados y que nuestra IP quede en los *logs* del sistema. Nmap cuenta con muchas opciones que nos ayudaran a conseguir mas información pero estas también pueden aumentar las probabilidades de ser descubierto como lo es la opción *-o* y *-sV*, pero para entender esto mejor debemos entender el *intercambio Handshake* y las opciones de nmap, para esto podemos consultar su https://nmap.org[web oficial]

Lo segundo es que un puerto puede tener 3 estados que pueden ser:

|=== 

| Open | El puerto esta abierto y corre un servicio en el 
| Closet | El puerto no esta en uso por ningún servicio  
| Filtered | El puerto esta filtrado ya sea por un Firewall u otro dispositivo o aplicación que se encarga de filtrar todos los paquetes
|===

Ya sabiendo esto procedemos al análisis, usando el siguiente comando:

----
sudo nmap [options][url]
sudo nmap -sS dareyourmind.net
---- 

Como se ve en la figura 2, son muchos los puertos abiertos, y al lado derecho podemos ver que servicios corre la maquina. 

image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_201.png[]

Luego de esto empezamos a realizar la conexión a los puertos para conseguir la información, esto lo podemos realizar con la herramienta *netcat*, de la siguiente manera:

----
sudo nc [host][port]
sudo nc dareyourmind.net [port]
----

Como se ve en la siguiente figura podemos ver la versión de *SSH*, *FTP*, *smtp*.

image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_202.png[]


El servicio que corre en el puerto 80 es *Apache* con *PHP 5.5*

image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_204.png[]

Para el segundo ejercicio es necesario analizar todos los puertos, ya que si por alguna razón hay un puerto filtrado o abierto y el servicio que corre es desconocido *(unknow)*, nmap lo puede omitir, es por eso que debemos analizar todos los puertos que en total son (65535). 

  sudo nmap -sS hackthis.co.uk -p0-65535  hackthis.co.uk
   

Lo ideal si esto fuera un caso real es analizar todos los puertos abiertos ya que en ocasiones las aplicaciones mal intencionadas corren en los puertos más altos e inclusive analizar  los que corren bajo *udp*, para esto usamos la opción *-sU*

Ahora vemos que existen muchos puertos que corren servicios desconocidos, estos pueden ser shells u otras aplicaciones. Luego de realizar el mismo proceso que el ejercicio anterior nos damos cuenta que en el puerto 6776 corre un *banner* especial 

image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_205.png[]

== Mitigando las amenazas

Existen muchas recomendaciones que pueden surgir frente a este tema, pero entre las más importantes esta:

* Configurar adecuadamente las directrices de cada aplicación, por ejemplo apache tiene la opción de configurar la información que queremos mostrar si hay un error, lo ideal seria mostrar la menor información posible

* Solo usar las aplicaciones y los puertos que sean necesario

* Actualizar los paquetes y aplicaciones cada vez que salga una nueva versión estable de las mismas. 

* Si encontramos una anomalía en el sistema reportarlo, por ejemplo puertos con servicios desconocidos, o trafico anómalo.

* Realizar periódicamente análisis de los sistemas, pero hay que tener en cuenta que esto debe ser con consentimiento de la organización y siguiendo un plan de seguridad.

*_Si existen dudas sobre algunos términos por favor consulte el glosario_*      
   
