= “Es más fácil con un CMS”

Muchos programadores prefieren usar CMS para gestionar el contenido de sus aplicaciones web, esto por rendimiento y eficacia, pero en ocasiones el uso de CMS no solo facilita el trabajo del programador si no de un intruso también, esto lo explicaremos y lo veremos paso a paso realizando algunos desafíos en la plataforma http://www.root-me.org[root-me].

image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_220.png[]

== CMS Challenge

Existen muchos CMS en el mercado actualmente, unos más populares que otros como por ejemplo *phpbb*, *Joomla*, *Drupal*, *Moodle* entre otros, la tarea de estos es permitirnos gestionar contenido de manera fácil y rápidamente, pero con estos también llegan algunos problemas de seguridad que permiten a un atacante tener una mayor probabilidad de acceder al sistema. 

Esto se debe a muchos factores el primero es que a lo largo del tiempo se han encontrado muchas vulnerabilidades en CMS populares, por lo que si no se mantienen adecuadamente actualizados. 


image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_221.png[]

En segundo lugar que estos CMS vienen con configuraciones por defecto que si son omitidas pueden facilitar enormemente la tarea de acceder al sistema, por ejemplo los *Joomla*, *Moodle* y otros, vienen por defecto con un panel para el administrador en donde este puede llevar a cabo sus operaciones, pero también puede ser la puerta de entrada al control de la aplicación por terceros. 

image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_222.png[]

En tercer lugar es que estos CMS vienen con una estructura preconfigurada, es decir que todos saben donde están los paneles del administrador, los archivos de configuración y muchos otros archivos que pueden ser útiles a un atacante para recolectar y explotar el sistema, es decir que la *seguridad por oscuridad* no se aplica a estos sistemas. Pero todo esto lo veremos realizando este par de ejercicios y un caso de la vida real:

*   Install files en http://www.root-me.org[root-me.org]
*   Real 2 en  http://www.root-me.org[root-me.org]


=== ¿Como identificarlos?

Existe muchas formas maneras de identificar un CMS, muchas veces ellos dejan meta-datos en el código fuente, crean cookies especiales, o incluso dejan su logo o su nombre en la pagina y si esto no funciona existen herramientas como *blindelephant* o nikto.  

Para el primer ejercicio vemos que en el código fuente esta el uso CMS usado, en este caso es *phpbb* y la tarea es acceder hasta el archivo de configuración, para esto y ya sabiendo que tipo de CMS es, entonces lo descargamos desde su pagina oficial con el fin de ver su estructura, como se dijo en la tercera problemática. 

Vamos a https://www.phpbb.com/[phpbb] y descargamos el CMS

image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_223.png[]

Ahora podemos ver como esta estructurada la aplicaciones, si vemos en la siguiente figura existe un directorio *adm*, que es el directorio reservado para el administrador, un directorio de configuraciones, uno de archivos, etc. Esto nos deja ver claramente la estructura.

Sabiendo que la url estamos en la carpeta /phpbb podemos empezar a buscar las rutas de los archivos de instalación desde la url, tendremos algo parecido a la siguiente url

 http://challenge01.root-me.org/web-serveur/ch6/phpbb/install/

image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_225.png[]

Como se ve la ruta la pudimos conseguir descargando y viendo la estructura del CMS, si esto fuera un caso real podríamos acceder al cualquier directorio (si estos no estuvieran bien configurado) y ver las configuraciones, los logs, los archivos del admin, entre muchas otras cosas. 

image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_226.png[]


    
Para el segundo ejercicio el proceso es similar, como se ve en la figura existe un CMS de nombre *_CMSimple_*, lo descargamos desde su pagina original http://www.cmsimple.org/[cmsimple.org]

image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_227.png[]

El proceso es similar al anterior ejercicio así que omitiremos los pasos siguientes.

image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_228.png[]

image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_229.png[]

===  En la vida real

Como lo dijimos en un principio existen algunas herramientas que nos permite determinar el CMS en la aplicación, unas de ellos son:

* Blindelephant
* Nikto
* JoomlaScam



Luego debemos verificar si el CMS que usamos tiene fallas de seguridad.

image::https://dl.dropboxusercontent.com/u/98103636/Selecci%C3%B3n_231.png[]

Si es así, lo que debemos tomar las medidas adecuadas en el menor tiempo posible.

== Mitigando las amenazas



Entre las recomendaciones para mitigar los riesgos de usar *CMS* están:

* Instalar las actualizaciones cada vez que estén disponibles
* Configurar los permisos
* Evitar las configuraciones por defecto
* Verificar periódica en la https://web.nvd.nist.gov/[*NVD*] si se han reportado fallos de seguridad en la versión de la CMS que usamos

*_Si existen dudas sobre algunos términos usados por favor consulte el glosario_*

