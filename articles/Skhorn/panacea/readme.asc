= Codeeval: Panacea - Truth or Lie

Descripción del reto:

_There are many computer and human viruses nowadays. Scientists are scratching their heads over antiviruses that could stop a particular virus and, in most cases, they find right solutions. 
So, virologists need to know which antiviruses can protect us from viruses, and what they still have to work on to secure against the remaining viruses. Let’s help them out!_

Este reto es sobre calcular la suma de unos valores en Hexadecimal (Virus) y en Binario (Antivirus),que es proporcionado como nuestro caso prueba y separados por un _pipeline: ("|").

Si la suma de los valores en hexadecimal es mayor a la suma de los valores en binario, por cada línea, significa que el antivirus no funciono e imprimimos *False*.

Si es todo lo contrario, osea, que la suma de los valores binarios es mayor o igual a la suma de los números en hexadecimal, significa que el antivirus bloqueo el virus e imprimios *True*

.e.g
==========================
*Caso prueba*
64 6e 78 | 100101100 11110
5e 7d 59 | 1101100 10010101 1100111
93 75 | 1000111 1011010 1100010
==========================

.Resultado
==========================
True
True
False
==========================

¿Por que?
Tomando como caso la primera línea:
.Convirtiendo de Hexadecimal a Decimal, tenemos:
==========================
El del *Hexadecimal* _64_ a *Decimal* es _100_
El del *Hexadecimal* _6e_ a *Decimal* es _110_
El del *Hexadecimal* _78_ a *Decimal* es _120_

Total: 330
==========================

Ahora,
.Convirtiendo de Binario a Decimal, tenemos:
==========================
El del *Binario* _100101100_ a *Decimal* es _300_
El del *Binario* _11110_ a *Decimal* es _30_

Total: 330
==========================

Como la suma total de los valores binarios, es igual, el resultado es:

*True*

Para resolver este reto, basta con:
. Dividir las lineas del caso de prueba
. Obtener un array de los valores de los virus y los antivirus, haciendo un Split del pipeline y de los espacios vacios.

[source, c#]
----
    string[] lines = line.Split('|');
    string[] virus = lines[0].Split(' ');
    string[] antivirus = lines[1].Split(' ');
----

Despues, un ciclo de la longitud del array _virus[]_ y convertimos los valores del arreglo, de hexadecimal a decimal y hacemos la suma total

[source, c#]
----
    for(int i = 0; i < virus.Length; i++)
    {
        if(virus[i] != "")
        {
            int decValue = int.Parse(virus[i], System.Globalization.NumberStyles.HexNumber);
            sumHex += decValue;
        }
    }
----


Para el caso del arreglo del _antivirus[]_, hacemos lo mismo, un ciclo de la longitud del array _antivirus[]_ y convertimos los valores del arreglo, de binario a decimal y hacemos la suma total

[source, c#]
----
    for(int i = 0; i < antivirus.Length; i++)
    {
        if(antivirus[i] != "")
        {
            int binValue = Convert.ToInt32(antivirus[i],2);
            sumBin += binValue;
        }
    }
----

Y para finalizar, comparamos los totales, según lo establecido:

Si el total de la suma de los datos binarios es mayor o igual al total de la suma de los datos hexadecimales, imprimimos *True* y si no, imprimimos *False* lo que indica que la suma total de los datos hexadecimales fue mayor y no se bloqueo el virus.

[source, c#] 
----          
    if(sumBin >= sumHex)
    {
        Console.WriteLine("True");  
    }
    else
    {
        Console.WriteLine("False");
    }
----
