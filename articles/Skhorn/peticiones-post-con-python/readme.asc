= Haciendo peticiones POST con Python

----
Para demostración, usaremos el reto https://www.hackthis.co.uk/levels/intermediate/2[Intermediate Level 2] de https://www.hackthis.co.uk/[hackthis.co.uk]
----

Breve explicación del Metodo POST
El metodo POST envia los datos para ser procesados (e.g de un recurso identificado como un formulario HTML) a un recurso identificado. Los datos son incluidos en el body del request, se envian y nos entregan un response con información.

image::/articles/Skhorn/POST_using_python/post.png[]

Descripción del reto:

_Use the POST method to send the password 'flubergump' to this page_

Hay muchas maneras de enviar una petición por POST pasando el parametro 'flubergump'. Desde curl, hasta JS, pero yo opte por usar Python.

Para este caso, usare la librería _requests_. Es una librería muy fácil de usar para obtener datos de una web y hacer peticiones GET/POST, etc.. sin la necesidad de hacer tanta labor manual, de lidiar con el encoding de unicode a la hora de enviar una petición POST.

[source, python]
----
import requests
----

Instanciamos las variables para el login en https://www.hackthis.co.uk/[hackthis], que es necesario, porque si enviamos la petición sea por _POST_|_GET_ y no estamos logeados, no haremos nada y obtendremos como respuesta en el body del response un *"You need to login to view this content"*
[source, python]
----
username = '<user>'
password = '<pass>'
----

Definimos el payload, en otras palabras, los parámetros que enviaremos y al campo al que están asociados.
[source, python]
----
payload = {"password" : "flubergump"}
----

Instanciamos y quemamos las url's que usaremos. La del login y la del reto.
[source, python]
----
url = 'https://www.hackthis.co.uk/levels/intermediate/2'
login = 'https://www.hackthis.co.uk/?login'
----

Usamos el modulo _requests.Session()_ , el objeto _Session_ nos ayuda a manejar las configuraciones(e.g como los parámetros que se enviaran para algún request) y la persistencia a través de los requests(cookies, auth, proxies).
Y usando el objeto session, usamos la función _.post_ con los parámetros:
. login = la url donde iniciaremos sesión
. data=login_data = Nuestros parámetros de sesión
[source, python]
----
session = requests.Session()
session.post(login, data=login_data)
----

Y por ultimo, como la idea es mantener persistencia entre la sesión usamos el mismo objeto _session_, para usar de nuevo la función post y enviar el password _'flubergump'_
[source, python]
----
response = session.post(url, payload)
----

Si imprimos la variable response
[source, python]
----
print response

#Nos arrojara como respuesta:
<Response [200]>
----