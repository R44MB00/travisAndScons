= Extracción de información a la inversa

== Entendiendo la Ingeniería inversa

La Ingeniería inversa es la encargada de tomar un producto tangible o intangible, y desmenuzarlo en partes con el fin de responder a preguntas como: ¿De qué está hecho? ¿Cómo funciona? ¿Cómo se fabricó? En general trata de descubrir el funcionamiento integral de algo. Se le llama así debido a que su proceso va en contravía con el proceso de diseño normal en ingeniería, tomando primero lo más visible del producto para llegar al final a lo más invisible (o lo no tan obvio) del producto, y en el proceso ir descubriendo su funcionamiento.

Existen muchas empresas en el mundo que se encargan de hacer ingeniería inversa, esto con el fin de sacar al mercado un producto mejorado, o una copia de un producto original que cumple la misma labor con pequeñas modificaciones. En China es muy común ver este tipo de empresas funcionar, y esto ha originado una gran polémica en torno al uso de la ingeniería inversa debido a las posibles violaciones de propiedad intelectual.

=== Informática a la inversa

En la informática ha existido una constante lucha que se origina desde el mismo momento en que se empezaron a comercializar los computadores, la lucha entre el software *libre* y el software *privado*. El software libre es aquel que busca que el código fuente de los programas sea público y modificable, mientras el privado hace lo contrario. Esto ha llevado a que muchas personas que desarrollan software libre opten por la ingeniería inversa al software privado y desarrollen aplicaciones "open source" (de código abierto) que compiten con las aplicaciones y programas privados, por ejemplo el software *OpenOffice* compite con el *Microsoft Office*, y el sistema operativo *Linux* compite con *Windows*.


image::https://upload.wikimedia.org/wikipedia/commons/thumb/b/b0/NewTux.svg/100px-NewTux.svg.png[]
*_Figura1: El famoso Tux (Logo de Linux)_*

La comunidad de *software libre* se ha transformado en todo un movimiento filosófico/ideológico que busca democratizar el software y la tecnología informática para que el funcionamiento de un programa sea de conocimiento público y su uso sea modificable. Existen un sin número de desarrolladores voluntarios de software libre alrededor del mundo que trabajan conjuntamente, por eso normalmente el software libre se encuentra de manera gratuita en el mercado, siendo esto no siempre cierto, ya que al software libre también se le puede adjudicar un precio y ser vendido como el software privado. 

=== Seguridad

La ingeniería inversa ha sido muy útil para encontrar vulnerabilidades de *seguridad* en software privado y "crackearlo" es decir, piratearlo, así pues las personas que no pueden o no quieren pagar por un programa privado, lo piratean y lo usan de manera no tan legal. Este es un gran problema que enfrentan las empresas como *Microsoft* que producen software privado, ya que existen muchos piratas informáticos cuya tarea ha sido "crackear" o hacerle ingeniería inversa a muchos de sus programas.

== Reto Challengeland Reversing 6

En esto reto nos prporcionan un Mirror o programa ejecutable (.EXE) el cual es un programa privado, al cual le debemos hacer ingeniería inversa para extraerle información.
Nos indican que la contraseña para pasar de nivel está en una imagen BMP (imagen de mapa de bits) que se encuentra dentro del programa.


image::/articles/GoXo/extraccion-de-informacion-a-la-inversa/img1.png[]
*_Figura2: Indicaciones en Challengeland_*

Vamos a utilizar un software gratuito que se encuentra en internet, el software se llama *Resource-Extract* y nos ayuda a sacarle a un ejecutable (.EXE) todos los recursos que tenga, como por ejemplo las imágenes, iconos, código binario, etc.

Se puede descargar en este http://www.nirsoft.net/utils/resources_extract.html[link]

Abrimos este software, como se aprecia en la imagen de abajo, en el campo *Filename/Wildcard* ponemos nuestro ejecutable y en el campo *Destination Folder*, la carpeta donde queremos encontrar nuestros archivos extraídos.

Podemos seleccionar también los recursos que deseamos extraer del ejecutable.

image::/articles/GoXo/extraccion-de-informacion-a-la-inversa/img2.png[]
*_Figura3: Herramienta de ingeniería inversa_*

Pulsamos el botón *Start* y el software empezará a extraer todos los recursos que le hayamos indicado.

Podemos ver una imagen BMP en la carpeta que destinamos como *Destination folder*.


image::/articles/GoXo/extraccion-de-informacion-a-la-inversa/img3.png[]
*_Figura4: archivo level6_1.bmp con la solución_*

Abrimos esta imagen y veremos la contraseña/solución de este reto.

La ingeniería inversa tiene su lado bueno y su lado oscuro, su lado bueno ha logrado crear muchos programas libres tan competitivos como los que existen privadamente, su lado oscuro, es que ha permitido piratear un sin fin de programas privados y violar la propiedad intelectual de estos, de manera que la ingeniería inversa no es siempre un término que se relacione con lo legal. Al software libre no se le puede hacer ingeniería inversa, ya que este tipo de software por naturaleza expone su funcionamiento de manera libre y pública.

== Referencias

https://es.wikipedia.org/wiki/Ingenier%C3%ADa_inversa[Ingeniería inversa en Wikipedia]

http://www.nirsoft.net/utils/resources_extract.html[Resources Extract - Software de ingeniería inversa]

== Link del reto

http://challengeland.co/Challenges/Reversing/947523c723[Challenge land Reversing 6]


