= Jugando con el tiempo

== El tiempo en los sistemas

Así como en la vida real, el tiempo es una variable crucial en los sistemas informáticos, si no concebimos el tiempo que puede tener un sistema informático (en todos los sentidos) o este tiempo es impreciso, todas las funciones y tareas que haga este sistema estarán desordenadas y seguramente nada funcionará correctamente. hasta las capas de abstracción mas bajas que tiene un sistema informático están guiadas por un ciclo de procedimientos que van en orden; por ejemplo el procesador de un computador por mucho que tenga conexiones en paralelo, su sistema operativo siempre hará un recorrido procedimental tomando tiempo de ejecución en un orden dado.

Entonces podemos hablar de un tiempo humano y de un tiempo de máquina, el tiempo de máquina es muy veloz comparado con el humano, por eso es muy útil hacer grandes operaciones en computadores, ya que estos pueden hacer miles o millones de cáclulos operacionales por segundo humano (siempre ejecutándose en orden procedimental).

Si el tiempo de máquina es diferente al tiempo humano, imagínese ¿Qué tipo de algoritmo hace la conversión para que un computador nos diga que un segundo es un segundo?  ¿Cómo definir el segundo precisamente? ¿Qué es el tiempo sino un simple acuerdo universal?

=== Epoch

Se conoce Epoch como la fecha exacta del origen de una era, los computadores como los conocemos hoy en día también tienen su "Epoch" y normalmente es el 1 de enero del año 1970 (Estandarizado), desde ahí los computadores empezaron la cuenta larga del tiempo de su existencia. Hubo un gran problema mundialmente conocido como el *Problema del año 2000*, corría el año de 1999 y no se sabía que iba a pasar con el tiempo de los computadores que no fueron programados para enfrentar el cambio de de año, de siglo, y de milenio. Estaba una fuerte incertidumbre acerca del colapso de todo lo que funcionaba con informática, muchos bancos y sistemas de seguridad temían una posible gran catástrofe (para conocer mas acerca de este problema ver Referencias)


== Reto en CodeEval 166

En este reto nos dan dos horas en formato HH:MM:SS (HORA:MINUTO:SEGUNDO), nuesta tarea es tomar estas dos horas y restarlas, obteniendo así la diferencia absoluta de tiempo entre ellas, luego debemos imprimir esta diferencia también en formato HH:MM:SS.

*Entrada:*

14:01:57 12:47:11

13:09:42 22:16:15

08:08:06 08:38:28

23:35:07 02:49:59

14:31:45 14:46:56

*Salida:* 

01:14:46

09:06:33

00:30:22

20:45:08

00:15:11

_El programa en lenguaje *c* queda de la siguiente manera:_

[source,c]
----
// Programa para restar dos horas configuradas en el formato HH:MM:SS
// las horas son leídas como lo muestran las indicaciones del reto
// Por Alejandro Aguirre Soto (GoSo o GoXo)
// Este programa se hizo sin la librería del tiempo predefinida de lenguaje *time_t*

// incluimos las librerías *stdio* y *string*
#include <stdio.h>
#include <string.h>

	// acá comienza el método principal, siempre llamado *main*
int main(int argc, const char * argv[]) {

	// al archivo de texto es leído línea por línea en la variable line
    FILE *file = fopen(argv[1], "r");
    char line[1024];

	// declaramos un arreglo de enteros con 9 espacios especificados de la siguiente manera:
	// time[0] = Hora de inicio
	// time[1] = Minuto de inicio
	// time[2] = Segundo de inicio
	// time[3] = Hora final
	// time[4] = Minuto final
	// time[5] = Segundo final
	// time[6] = Diferencia Hora Inicio y Hora final
	// time[7] = Diferencia Minuto Inicio y Minuto final
	// time[8] = Diferencia segundo Inicio y segundo final

    int time[9];

	// las variables i, j son comodines de iteración

    int i = 0;
    int j = 0;

	// la variable start son los segundos totales del tiempo de inicio
	// la variable end son los segundos totales del tiempo final
	// la variable diff es la diferencia entre start y stop

    int start = 0;
    int end = 0;
    int diff = 0;

	// ciclo while para leer línea por línea
    while (fgets(line, 1024, file)) 
    {
	// la variable value es una cadena de caracteres que se encargará
	// de dividir la variable line según queramos
        char *value = " ";
        
	// mientras value no sea null, es decir haya alguna referencia de value
        while (value != NULL) {
            
		// en el formato HH:MM:SS tomamos primero la hora HH de la línea

	    if (i == 0) value  = strtok (line,":");

		// cuando i se incremente tomamos los valores siguientes de MM:SS (minutos, segundos)
		// con la instrucción siguiente

            else value = strtok (NULL,": \n");

            	// cuando tomemos los 6 valores: 
		// 2 horas (hora inicio, hora final)
		// 2 minutos (minuto inicio, minuto final)
		// 2 segundos (segundo inicio, segundo final)
		// Entonces nos salimos del ciclo while que lee las líneas del texto
		// con la siguiente instrucción:

            if (i >= 6)
            {
                i= 0;
                break;
            }

		// actualización de variables, la función atoi sirve para tomar
		// el texto de un número entero y volverlo entero
            		 
            time[i] = atoi(value);
            i++;
        }

	// Ya tenemos los 6 valores ahora pasamos 
	// las 2 horas, los 2 minutos y los 2 segundos a solo SEGUNDOS
	// con la siguiente instrucción
	// NOTA: recordar que start es el tiempo inicial, y end es el tiempo final
    
        start = time[0]*3600 + time[1]*60 + time[2];    
        end = time[3]*3600 + time[4]*60 + time[5];  
	
	// verificamos cual es mayor para hacer una resta que se guarde en diff
	// que siempre sea positiva
	// diff es la diferencia positiva entre la hora inicial y la hora final en segundos

        if (start > end) diff = start - end;
        else diff = end - start;

	// Acá comienza la parte más interesante del programa

	// a continuación guardamos en time[6], time[7] y time[8] la resta de la horas inicial y final
	// pero no la queremos mostrar en segundos, sino en formato HH:MM:SS
	// por eso le calculamos lo siguiente a diff
	
        time[6] = diff/3600; 	  // división parte entera de diff nos da las horas (1hora = 3600 segundos)
        time[7] = (diff%3600)/60; // división modular nos da el sobrante de lo anterior, y ese a sobrante
				  // le hacemos división parte entera en 60 para conocer los minutos
				  // (1 minuto = 60 segundos)			
        time[8] = (diff%3600)%60; // el sobrante de lo anterior es igual al sobrante de las horas y
				  // el sobrante de los minutos. mejor dicho los segundos que quedan
				  // todo con división modular

	// Ahora procedemos a mostrar el tiempo resultante en formato HH:MMSS
	// lo hacemos con la función printf como se puede constatar
	// como podemos ver los condicionales nos sirven para poner 0 a hora, minutos y segundos en el formato correcto
	// por ejemplo si nos da 1 hora 3 minutos y 9 segundos el tiempo resultante
	// pero no lo queremos mostrar 1:3:9 sino 01:03:09
	// un bucle for para mostrar las horas y minutos seguidas de dos puntos ":"
	// y un printf final para mostrar los segundos correctamente

        for (j = 6; j <= 7; j++) 
        {
            if (time[j] < 10) printf("0%d%s",time[j],":");
            else printf("%d%s",time[j],":");
        }
        
        if (time[8] < 10) printf("0%d\n",time[j]);
        else printf("%d\n",time[8]);
    
    } 
    return 0;
}

// Este programa pasó la evaluación de CodeEval con una puntuación de 34.998/35.0, ya que el lenguaje c
// al ser un lenguaje nativo, utiliza muy pocos recursos (mas rápido / menos recursos) 
// porque que su nivel de abstracción es mas bajo
// que otros lenguajes, por ejemplo en otros tipos de lenguajes este programa se puede implementar con no más
// de 5 líneas de código, ya que su nivel de abstracción es mas alto.

// Acá acaba nuestro programa
----

== Conclusión

El tiempo es un asunto primordial en la vida de los seres humanos, se puede volver un tema hasta filosófico, su implementación nos ha llevado a que todas las creaciones de la humanidad estén hechas en base al tiempo.

== Referencias

https://en.wikipedia.org/wiki/Epoch_(reference_date)[Epoch, wikipedia]

https://es.wikipedia.org/wiki/Problema_del_a%C3%B1o_2000[Problema del año 2000, wikipedia]

== Link del reto
https://www.codeeval.com/open_challenges/67/[Resta de Horas]
